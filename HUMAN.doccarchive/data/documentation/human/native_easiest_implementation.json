{"sections":[],"hierarchy":{"paths":[["doc:\/\/com.perimeterx.mobile-sdk\/documentation\/HUMAN"]]},"identifier":{"url":"doc:\/\/com.perimeterx.mobile-sdk\/documentation\/HUMAN\/Native_Easiest_Implementation","interfaceLanguage":"swift"},"kind":"article","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/human\/native_easiest_implementation"]},{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/human\/native_easiest_implementation"]}],"metadata":{"role":"article","roleHeading":"Article","modules":[{"name":"HUMAN"}],"title":"Native - Easiest Implementation"},"primaryContentSections":[{"kind":"content","content":[{"type":"heading","level":2,"text":"Introduction","anchor":"Introduction"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"In this article we will learn how to integrate the SDK to your native iOS\/Android app."}]}]},{"content":[{"inlineContent":[{"text":"Highlights:","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The faster way to integrate the SDK - minimum integration points."}]}]},{"content":[{"inlineContent":[{"text":"The SDK intercpts your URL requests.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Handle blocked requests."}]}]}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Note that the Android implementation requires that your app use "},{"identifier":"https:\/\/square.github.io\/okhttp\/","type":"reference","isActive":true},{"text":" which supports ","type":"text"},{"identifier":"https:\/\/square.github.io\/okhttp\/features\/interceptors\/","type":"reference","isActive":true}]},{"type":"text","text":"."}]}]},{"content":[{"inlineContent":[{"inlineContent":[{"text":"Note that the iOS implementation requires that your app use ","type":"text"},{"isActive":true,"type":"reference","identifier":"https:\/\/developer.apple.com\/documentation\/foundation\/urlsession"},{"type":"text","text":" or any 3rd party library that based on it"}],"type":"strong"},{"text":".","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"We will cover the following topics:","type":"text"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"identifier":"#how-to-start-the-sdk","isActive":true,"type":"reference"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"identifier":"#bot-defender-integration","isActive":true,"type":"reference"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"How to add the SDK’s HTTP headers to your URL requests."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"How to handle the blocked request.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"How to present a challenge to the user.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"How to set custom parameters (optional)."}]}]}]}]},{"content":[{"type":"paragraph","inlineContent":[{"isActive":true,"identifier":"#account-defender-integration","type":"reference"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"How to enable it.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"How to notify HUMAN’s backend on outgoing URL requests from the app.","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"How to set additional data (optional)."}],"type":"paragraph"}]}],"type":"unorderedList"}]}],"type":"unorderedList"}]}]},{"level":2,"anchor":"Important-notice-about-iOS","text":"Important notice about iOS","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The SDK uses a custom URL protocol in order to manipulate your URL requests. The SDK creates a new "},{"code":"URLSession","type":"codeVoice"},{"type":"text","text":" object to load your URL requests. As a result, there are few limitations that you should be aware of before the integration:"}]},{"type":"orderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"if your implement the "},{"type":"codeVoice","code":"urlSession(_ session: URLSession, didReceive challenge: URLAuthenticationChallenge, completionHandler: @escaping @Sendable (URLSession.AuthChallengeDisposition, URLCredential?) -> Void)"},{"type":"text","text":" in your "},{"type":"codeVoice","code":"URLSessionDelegate"},{"type":"text","text":", then this function "},{"inlineContent":[{"type":"text","text":"will not be called"}],"type":"strong"},{"type":"text","text":" and the default OS logic will apply in your URL request."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The SDK’s "},{"code":"URLSession","type":"codeVoice"},{"text":" object is configured with ","type":"text"},{"type":"codeVoice","code":"URLSessionConfiguration.default"},{"text":". Any custom configuration on your side ","type":"text"},{"type":"strong","inlineContent":[{"type":"text","text":"will not apply"}]},{"text":"’","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"The SDK does not support caching in your URL requests.","type":"text"}]}]}]},{"text":"How to start the SDK","level":2,"type":"heading","anchor":"How-to-start-the-SDK"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"The most important thing is to start the SDK as soon as possible in your app flow. The reason is that when your app will send an URL request to your server before the SDK was started, then the request will not include the SDK’s HTTP headers. As a result, HUMAN’s Enforcer could block the request and the SDK will not be able to present a challenge to the user.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"The best place to start the SDK is in the:"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"codeVoice","code":"Application"},{"type":"text","text":"’s "},{"type":"codeVoice","code":"onCreate"},{"type":"text","text":" function on Android."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"AppDelegate"},{"type":"text","text":"’s "},{"type":"codeVoice","code":"didFinishLaunchingWithOptions"},{"type":"text","text":" function on iOS."}],"type":"paragraph"}]}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"You should start the SDK on the "},{"type":"strong","inlineContent":[{"text":"main thread","type":"text"}]},{"text":".","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"The SDK is intercepting URL requests from your app. Your app should tell the SDK which domains are intercepted. Not specifying domains means that ALL domains will be intercepted. The SDK checks if the URL’s domain ends with one of the domains that were set. For example: If you set ","type":"text"},{"code":"example.com","type":"codeVoice"},{"text":" the SDK will also intercept calls to ","type":"text"},{"type":"codeVoice","code":"www.example.com"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"api.example.com"},{"type":"text","text":"."}],"type":"paragraph"}]}]},{"inlineContent":[{"text":"Here is an example of how it should be:","type":"text"}],"type":"paragraph"},{"level":3,"type":"heading","anchor":"Android","text":"Android"},{"inlineContent":[{"type":"text","text":"Kotlin:"}],"type":"paragraph"},{"type":"codeListing","code":["import android.app.Application","import com.humansecurity.mobile_sdk.HumanSecurity","import com.humansecurity.mobile_sdk.main.policy.HSPolicy","import com.humansecurity.mobile_sdk.main.policy.HSAutomaticInterceptorType","","class MainApplication: Application() {","","    override fun onCreate() {","        super.onCreate()","        startHumanSDK()","    }","","    private fun startHumanSDK() {","        try {","            val policy = HSPolicy()","            policy.automaticInterceptorPolicy.interceptorType = HSAutomaticInterceptorType.INTERCEPT","            policy.automaticInterceptorPolicy.setInterceptedDomains(setOf(\"example.com\"), \"<APP_ID>\")","","            HumanSecurity.start(this, \"<APP_ID>\", policy)","        }","        catch (exception: Exception) {","            println(\"Exception: ${exception.message}\")","        }","    }","}"],"syntax":"kotlin"},{"type":"paragraph","inlineContent":[{"text":"Java:","type":"text"}]},{"type":"codeListing","syntax":"java","code":["import android.app.Application;","import android.util.Log;","import java.util.HashSet;","import com.humansecurity.mobile_sdk.HumanSecurity;","import com.humansecurity.mobile_sdk.main.policy.HSPolicy;","import com.humansecurity.mobile_sdk.main.policy.HSAutomaticInterceptorType;","","public class MainApplication extends Application {","","    @Override","    public void onCreate() {","        super.onCreate();","        startHumanSDK();","    }","","    void startHumanSDK() {","        try {","            HSPolicy policy = new HSPolicy();","            policy.getAutomaticInterceptorPolicy().setInterceptorType(HSAutomaticInterceptorType.INTERCEPT);","","            HashSet<String> domains = new HashSet<>();","            domains.add(\"example.com\");","            policy.getAutomaticInterceptorPolicy().setInterceptedDomains(domains, \"<APP_ID>\");","","            HumanSecurity.INSTANCE.start(this, \"<APP_ID>\", policy);","        }","        catch (Exception exception) {","            Log.e(\"MainApplication\",\"Exception: \" + exception.getMessage());","        }","    }","}"]},{"text":"iOS","type":"heading","anchor":"iOS","level":3},{"type":"paragraph","inlineContent":[{"type":"text","text":"Swift:"}]},{"code":["import UIKit","import HUMAN","","@main","class AppDelegate: UIResponder, UIApplicationDelegate {","","    func application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]?) -> Bool {","        startHumanSDK()","        return true","    }","","    func startHumanSDK() {","        do {","            let policy = HSPolicy()","            policy.automaticInterceptorPolicy.interceptorType = .intercept","            policy.automaticInterceptorPolicy.set(interceptedDomains: [\"example.com\"], forAppId: \"<APP_ID>\")","            ","            try HumanSecurity.start(appId: \"<APP_ID>\", policy: policy)","        }","        catch {","            print(\"Error: \\(error)\")","        }","    }","}"],"syntax":"swift","type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Objective-C:"}]},{"syntax":"objc","code":["@import HUMAN;","","@implementation AppDelegate","","- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions {","    [self startHumanSDK];","    return YES;","}","","- (void)startHumanSDK {","    HSPolicy *policy = [[HSPolicy alloc] init];","    policy.automaticInterceptorPolicy.interceptorType = HSAutomaticInterceptorTypeIntercept;","    [policy.automaticInterceptorPolicy setWithInterceptedDomains:[NSSet setWithObject:@\"example.com\"] forAppId:@\"<APP_ID>\"];","","    NSError *error = nil;","    [HumanSecurity startWithAppId:@\"<APP_ID>\" policy:policy error:&error];","    if (error != nil) {","        NSLog(@\"Error: %@\", error);","    }","}","","@end"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"Let’s talk about what we have in the code here:","type":"text"}]},{"type":"orderedList","items":[{"content":[{"inlineContent":[{"text":"We about to start the SDK as soon as possible and on the main thread.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"We create a ","type":"text"},{"identifier":"doc:\/\/com.perimeterx.mobile-sdk\/documentation\/HUMAN\/HSPolicy","type":"reference","isActive":true},{"text":" instance. This object is used to configure the SDK’s behavior. Here, we set the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.perimeterx.mobile-sdk\/documentation\/HUMAN\/HSAutomaticInterceptorPolicy\/interceptorType"},{"text":" property to ","type":"text"},{"identifier":"doc:\/\/com.perimeterx.mobile-sdk\/documentation\/HUMAN\/HSAutomaticInterceptorType\/intercept","type":"reference","isActive":true},{"text":". This will turn on the ","type":"text"},{"inlineContent":[{"text":"Automatic Interception","type":"text"}],"type":"emphasis"},{"type":"text","text":" feature of the SDK. In short, this feature allows the SDK to manipulate URL requests and handle their responses by itself. We also set our server’s domain. This will tell the SDK to intercept URL requests only for this domain."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"We call the "},{"type":"reference","identifier":"doc:\/\/com.perimeterx.mobile-sdk\/documentation\/HUMAN\/HumanSecurity\/start(appId:policy:)","isActive":true},{"type":"text","text":" function of the SDK. We provide the following parameters:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"Application"},{"text":" instance (Android only).","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Your AppID.","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"The policy object that we configured.","type":"text"}],"type":"paragraph"}]}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Note: In iOS, The Automatic Interception uses the "},{"type":"codeVoice","code":"URLSessionConfiguration.default"},{"type":"text","text":" to send your URL request. However, if your app uses a custom configuration, you should set your configuration in the policy - "},{"identifier":"doc:\/\/com.perimeterx.mobile-sdk\/documentation\/HUMAN\/HSAutomaticInterceptorPolicy\/urlSessionConfiguration","isActive":true,"type":"reference"},{"text":".","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"Note: If your app communicates with several servers that have different AppID, you can call the ","type":"text"},{"identifier":"doc:\/\/com.perimeterx.mobile-sdk\/documentation\/HUMAN\/HumanSecurity\/start(appIds:policy:)","type":"reference","isActive":true},{"text":" function which allow you to pass an array of AppIDs. You should specify the relevant AppID for each API call in the SDK.","type":"text"}]},{"type":"heading","anchor":"Bot-Defender-integration","text":"Bot Defender integration","level":2},{"type":"heading","text":"How to add the SDK’s HTTP headers to your URL requests and handle the blocked request","level":3,"anchor":"How-to-add-the-SDKs-HTTP-headers-to-your-URL-requests-and-handle-the-blocked-request"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"The SDK adds its HTTP headers to you URL requests automaticlly. There is no need to manually add those headers."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"The SDK handles the blocked request and present a challenge to the user automatically.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The SDK provides a custom error response directly to your request handler."}]}]}]},{"type":"paragraph","inlineContent":[{"text":"Here is an example of how it should be:","type":"text"}]},{"text":"Android","level":4,"type":"heading","anchor":"Android"},{"inlineContent":[{"text":"Kotlin (OkHttp):","type":"text"}],"type":"paragraph"},{"syntax":"kotlin","code":["import com.humansecurity.mobile_sdk.HumanSecurity","import com.humansecurity.mobile_sdk.main.HSBotDefenderErrorType","import com.humansecurity.mobile_sdk.main.HSInterceptor","import okhttp3.OkHttpClient","import okhttp3.Request","","class MyHttpClient {","","    private val okHttpClient: OkHttpClient = OkHttpClient.Builder()","        .addInterceptor(HSInterceptor()) \/\/ SHOULD BE THE LAST INTERCEPTOR","        .build()","","    fun sendRequest(url: String) {","        try {","            val request: Request = Request.Builder().url(url).build()","            okHttpClient.newCall(request).execute().use { response ->","                if (!response.isSuccessful) {","                    response.body?.string()?.let { responseBody ->","                        when (HumanSecurity.BD.errorType(responseBody)) {","                            HSBotDefenderErrorType.REQUEST_WAS_BLOCKED -> {","                                println(\"Request was blocked\")","                            }","                            else -> {","                                println(\"Unknown error\")","                            }","                        }","                    }","                }","            }","        }","        catch (exception: Exception) {","            println(\"Request was failed. Exception: $exception\")","        }","    }","}"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"Kotlin (ktor):","type":"text"}]},{"code":["import com.humansecurity.mobile_sdk.HumanSecurity","import com.humansecurity.mobile_sdk.main.HSBotDefenderErrorType","import com.humansecurity.mobile_sdk.main.HSInterceptor","import io.ktor.client.*","import io.ktor.client.call.body","import io.ktor.client.engine.okhttp.*","import io.ktor.client.request.*","import io.ktor.client.statement.*","","class MyHttpClient {","","    private val httpClient: HttpClient = HttpClient(OkHttp) {","        engine {","            addInterceptor(HSInterceptor()) \/\/ SHOULD BE THE LAST INTERCEPTOR","        }","    }","","    suspend fun sendRequest(url: String) {","        try {","            val response: HttpResponse = httpClient.request(url) {}","            val responseBody = response.body<String>()","            when (HumanSecurity.BD.errorType(responseBody)) {","                HSBotDefenderErrorType.REQUEST_WAS_BLOCKED -> {","                    println(\"Request was blocked\")","                }","                else -> {","                    println(\"Unknown error\")","                }","            }","        } catch (exception: Exception) {","            println(\"Request was failed. exception: $exception\")","        }","    }","}"],"syntax":"kotlin","type":"codeListing"},{"inlineContent":[{"text":"Java:","type":"text"}],"type":"paragraph"},{"type":"codeListing","code":["import com.humansecurity.mobile_sdk.HumanSecurity;","import com.humansecurity.mobile_sdk.main.HSInterceptor;","import android.util.Log;","import okhttp3.OkHttpClient;","import okhttp3.Request;","import okhttp3.Response;","import okhttp3.ResponseBody;","","public class MyHttpClient {","","    private final OkHttpClient httpClient = new OkHttpClient.Builder()","            .addInterceptor(new HSInterceptor()) \/\/ SHOULD BE THE LAST INTERCEPTOR","            .build();","","    void sendRequest(String url) {","        Runnable r = () -> {","            try {","                Request request = new Request.Builder().url(url).build();","                Response response = httpClient.newCall(request).execute();","                ResponseBody responseBody = response.body();","                String responseString = null;","                if (responseBody != null) {","                    responseString = responseBody.string();","                    response.close();","                }","                if (!response.isSuccessful() && responseString != null) {","                    switch (HumanSecurity.INSTANCE.getBD().errorType(responseString)) {","                        case REQUEST_WAS_BLOCKED:","                            Log.i(\"MyInterceptor\", \"Request was blocked\");","                            break;","                    }","                }","            }","            catch (Exception exception) {","                Log.i(\"MyHttpClient\", \"Request was failed. Exception: \" + exception);","            }","        };","        new Thread(r).start();","    }","}"],"syntax":"java"},{"level":4,"anchor":"iOS","text":"iOS","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"Using ","type":"text"},{"overridingTitle":"URLSession","identifier":"https:\/\/developer.apple.com\/documentation\/foundation\/urlsession","overridingTitleInlineContent":[{"code":"URLSession","type":"codeVoice"}],"isActive":true,"type":"reference"},{"type":"text","text":":"}]},{"type":"paragraph","inlineContent":[{"text":"Swift:","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["import HUMAN","","class MyHttpClient {","","    func sendUrlRequest(url: URL) {","        var request = URLRequest(url: url)","        ","        \/\/ Config your request...","","        let dataTask = URLSession.shared.dataTask(with: request) { data, response, error in","            if let error {","                let errorType = HumanSecurity.BD.errorType(error: error)","                switch errorType {","                case .requestWasBlocked:","                    print(\"Request was blocked\")","                default:","                    break","                }","            }","        }","        dataTask.resume()","    }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Objective-C:"}]},{"type":"codeListing","syntax":"objc","code":["@import HUMAN;","","@implementation MyHttpClient","","- (void)sendUrlRequest:(NSURL *)url {","    NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:url];","    ","    \/\/ Config your request...","","    NSURLSessionDataTask *dataTask = [NSURLSession.sharedSession dataTaskWithRequest:request completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {","        if (error != nil) {","            HSBotDefenderErrorType errorType  = [HumanSecurity.BD errorTypeWithError:error];","            switch (errorType) {","                case HSBotDefenderErrorTypeRequestWasBlocked:","                    NSLog(@\"Request was blocked\");","                    break;","                default:","                    break;","            }","        }","    }];","    [dataTask resume];","}","","@end"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Using "},{"identifier":"https:\/\/github.com\/Alamofire\/Alamofire","type":"reference","isActive":true},{"type":"text","text":":"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Swift:"}]},{"type":"codeListing","syntax":"swift","code":["import Alamofire","import HUMAN","","class MyHttpClient {","","    func sendUrlRequest(url: URL) {","        AF.request(url).response { response in","            if let error = response.error?.underlyingError {","                let errorType = HumanSecurity.BD.errorType(error: error)","                switch errorType {","                case .requestWasBlocked:","                    print(\"Request was blocked\")","                default:","                    break","                }","            }","        }","    }","}"]},{"inlineContent":[{"text":"Let’s talk about what we have in the code here:","type":"text"}],"type":"paragraph"},{"type":"orderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"[Android only] We configure the HTTP client to have the "},{"code":"HSInterceptor","type":"codeVoice"},{"text":". ","type":"text"},{"inlineContent":[{"text":"This interceptor must be the last interceptor in the list","type":"text"}],"type":"strong"},{"text":".","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"We send the URL request.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"We check with the SDK if the error that was received is a “blocked request error”."}]}]}]},{"inlineContent":[{"text":"Please note that while your request handler is called, the SDK is presenting a challenge to the user.","type":"text"}],"type":"paragraph"},{"text":"What should I do when a request is blocked","type":"heading","level":3,"anchor":"What-should-I-do-when-a-request-is-blocked"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Handle it as a failure.","type":"text"}]},{"inlineContent":[{"type":"text","text":"Your app should handle the blocked request as a failure. However, you should consider that your app’s UI will be shown again after the challenge was solved\/cancelled by the user. If the request was triggered by a user’s action, you should make it clear that the user may try again the same action."}],"type":"paragraph"}]}]},{"text":"How to set custom parameters (optional)","anchor":"How-to-set-custom-parameters-optional","type":"heading","level":3},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can set custom parameters in order to configure HUMNAN’s backend with additional parameters."}]},{"type":"paragraph","inlineContent":[{"text":"Those parameters can be set with a dictionary (iOS) or an hash map (Android), with the key “","type":"text"},{"type":"codeVoice","code":"custom_param[x]"},{"type":"text","text":"” where "},{"type":"codeVoice","code":"[x]"},{"text":" is a number between ","type":"text"},{"code":"1-10","type":"codeVoice"},{"type":"text","text":"."}]},{"inlineContent":[{"type":"text","text":"You should call the "},{"isActive":true,"identifier":"doc:\/\/com.perimeterx.mobile-sdk\/documentation\/HUMAN\/HSBotDefender\/setCustomParameters(parameters:forAppId:)","type":"reference"},{"type":"text","text":" only after the "},{"type":"reference","identifier":"doc:\/\/com.perimeterx.mobile-sdk\/documentation\/HUMAN\/HumanSecurity\/start(appId:policy:)","isActive":true},{"text":" function was already called.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Here is an example of how it should be:"}],"type":"paragraph"},{"anchor":"Android","level":4,"text":"Android","type":"heading"},{"inlineContent":[{"text":"Kotlin:","type":"text"}],"type":"paragraph"},{"syntax":"kotlin","type":"codeListing","code":["import com.humansecurity.mobile_sdk.HumanSecurity","","fun setCustomParametersForBotDefender() {","    try {","        val customParameters = HashMap<String, String>()","        customParameters[\"custom_param1\"] = \"hello\"","        customParameters[\"custom_param2\"] = \"world\"","        HumanSecurity.BD.setCustomParameters(customParameters, \"<APP_ID>\")","    }","    catch (exception: Exception) {","        println(\"Exception: ${exception.message}\")","    }","}"]},{"inlineContent":[{"text":"Java:","type":"text"}],"type":"paragraph"},{"code":["import com.humansecurity.mobile_sdk.HumanSecurity;","import java.util.HashMap;","import android.util.Log;","","void setCustomParametersForBotDefender() {","    try {","        HashMap<String, String> customParameters = new HashMap<>();","        customParameters.put(\"custom_param1\", \"hello\");","        customParameters.put(\"custom_param2\", \"world\");","        HumanSecurity.INSTANCE.getBD().setCustomParameters(customParameters, \"<APP_ID>\");","    }","    catch(Exception exception) {","        Log.e(\"MainApplication\",\"Exception: \" + exception.getMessage());","    }","}"],"syntax":"java","type":"codeListing"},{"text":"iOS","anchor":"iOS","type":"heading","level":4},{"type":"paragraph","inlineContent":[{"text":"Swift:","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["import HUMAN","","func setCustomParametersForBotDefender() {","    do {","        var customParameters = [String: String]()","        customParameters[\"custom_param1\"] = \"hello\"","        customParameters[\"custom_param2\"] = \"world\"","        try HumanSecurity.BD.setCustomParameters(parameters: customParameters, forAppId: \"<APP_ID>\")","    }","    catch {","        print(\"Error: \\(error)\")","    }","}"]},{"inlineContent":[{"type":"text","text":"Objective-C:"}],"type":"paragraph"},{"type":"codeListing","syntax":"objc","code":["@import HUMAN;","","- (void)setCustomParametersForBotDefender {","    NSMutableDictionary<NSString *, NSString *> *customParameters = [[NSMutableDictionary<NSString *, NSString *> alloc] init];","    customParameters[@\"custom_param1\"] = @\"hello\";","    customParameters[@\"custom_param2\"] = @\"world\";","    NSError* error = nil;","    [HumanSecurity.BD setCustomParametersWithParameters:customParameters forAppId:@\"<APP_ID>\" error:&error];","    if (error != nil) {","        NSLog(@\"Error: %@\", error);","    }","}"]},{"text":"Account Defender integration","anchor":"Account-Defender-integration","type":"heading","level":2},{"type":"heading","anchor":"How-to-enable-Account-Defender-in-your-app","text":"How to enable Account Defender in your app?","level":3},{"inlineContent":[{"type":"text","text":"In order to enable Account Defender, you should set the "},{"type":"codeVoice","code":"UserID"},{"type":"text","text":" of your current logged-in user in the SDK."}],"type":"paragraph"},{"inlineContent":[{"text":"Here is an example of how it should be:","type":"text"}],"type":"paragraph"},{"type":"heading","level":4,"text":"Android","anchor":"Android"},{"inlineContent":[{"type":"text","text":"Kotlin:"}],"type":"paragraph"},{"type":"codeListing","code":["import com.humansecurity.mobile_sdk.HumanSecurity","","fun onUserLoggedIn(userID: String) {","    try {","        HumanSecurity.AD.setUserId(userID, \"<APP_ID>\")","    }","    catch (exception: Exception) {","        println(\"Exception: ${exception.message}\")","    }","}"],"syntax":"kotlin"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Java:"}]},{"type":"codeListing","syntax":"java","code":["import com.humansecurity.mobile_sdk.HumanSecurity;","import android.util.Log;","","void onUserLoggedIn(String userID) {","    try {","        HumanSecurity.INSTANCE.getAD().setUserId(userID, \"<APP_ID>\");","    }","    catch(Exception exception) {","        Log.e(\"MainApplication\",\"Exception: \" + exception.getMessage());","    }","}"]},{"type":"heading","anchor":"iOS","level":4,"text":"iOS"},{"type":"paragraph","inlineContent":[{"text":"Swift:","type":"text"}]},{"code":["import HUMAN","","func onUserLoggedIn(userID: String) {","    do {","        try HumanSecurity.AD.setUserId(userId: userID, forAppId: \"<APP_ID>\")","    }","    catch {","        print(\"Error: \\(error)\")","    }","}"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"Objective-C:","type":"text"}]},{"syntax":"objc","code":["@import HUMAN;","","- (void)onUserLoggedIn:(NSString *)userID {","    NSError* error = nil;","    [HumanSecurity.AD setUserIdWithUserId:userID forAppId:@\"<APP_ID>\" error:&error];","    if (error != nil) {","        NSLog(@\"Error: %@\", error);","    }","}"],"type":"codeListing"},{"anchor":"How-to-notify-HUMANs-backend-on-outgoing-URL-requests-from-the-app","text":"How to notify HUMAN’s backend on outgoing URL requests from the app","level":3,"type":"heading"},{"inlineContent":[{"type":"text","text":"In order to allow Account Defender protect the user’s account, your app has to provide the SDK with outgoing URL requests."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"While the SDK’s interceptor is enabled, the SDK is collecting your outgoing URL requests automatically. There is no need to manually call the SDK’s API."}]},{"level":3,"anchor":"How-to-set-additional-data-optional","type":"heading","text":"How to set additional data (optional)"},{"inlineContent":[{"type":"text","text":"You can set additional data in order to configure HUMNAN’s backend with additional parameters."}],"type":"paragraph"},{"inlineContent":[{"text":"Those parameters can be set with a dictionary (iOS) or an hash map (Android).","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"You should call the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.perimeterx.mobile-sdk\/documentation\/HUMAN\/HSAccountDefender\/setAdditionalData(parameters:forAppId:)"},{"type":"text","text":" only after the "},{"type":"reference","identifier":"doc:\/\/com.perimeterx.mobile-sdk\/documentation\/HUMAN\/HumanSecurity\/start(appId:policy:)","isActive":true},{"text":" function was already called.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Here is an example of how it should be:"}]},{"text":"Android","level":4,"anchor":"Android","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"Kotlin:","type":"text"}]},{"code":["import com.humansecurity.mobile_sdk.HumanSecurity","","fun setAdditionalDataForAccountDefender() {","    try {","        val additionalData = HashMap<String, String>()","        additionalData[\"my_key1\"] = \"hello\"","        additionalData[\"my_key2\"] = \"world\"","        HumanSecurity.AD.setAdditionalData(additionalData, \"<APP_ID>\")","    }","    catch (exception: Exception) {","       println(\"Exception: ${exception.message}\")","    }","}"],"type":"codeListing","syntax":"kotlin"},{"type":"paragraph","inlineContent":[{"text":"Java:","type":"text"}]},{"code":["import com.humansecurity.mobile_sdk.HumanSecurity;","import java.util.HashMap;","import android.util.Log;","","void setAdditionalDataForAccountDefender() {","    try {","        HashMap<String, String> additionalData = new HashMap<>();","        additionalData.put(\"my_key1\", \"hello\");","        additionalData.put(\"my_key2\", \"world\");","        HumanSecurity.INSTANCE.getAD().setAdditionalData(additionalData, \"<APP_ID>\");","    }","    catch(Exception exception) {","        Log.e(\"MainApplication\",\"Exception: \" + exception.getMessage());","    }","}"],"syntax":"java","type":"codeListing"},{"type":"heading","anchor":"iOS","level":4,"text":"iOS"},{"type":"paragraph","inlineContent":[{"text":"Swift:","type":"text"}]},{"code":["import HUMAN","","func setAdditionalDataForAccountDefender() {","    do {","        var additionalData = [String: String]()","        additionalData[\"my_key1\"] = \"hello\"","        additionalData[\"my_key2\"] = \"world\"","        try HumanSecurity.AD.setAdditionalData(parameters: additionalData, forAppId: \"<APP_ID>\")","    }","    catch {","        print(\"Error: \\(error)\")","    }","}"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"type":"text","text":"Objective-C:"}],"type":"paragraph"},{"code":["@import HUMAN;","","- (void)setAdditionalDataForAccountDefender {","    NSMutableDictionary<NSString *, NSString *> *additionalData = [[NSMutableDictionary<NSString *, NSString *> alloc] init];","    additionalData[@\"my_key1\"] = @\"hello\";","    additionalData[@\"my_key2\"] = @\"world\";","    NSError* error = nil;","    [HumanSecurity.AD setAdditionalDataWithParameters:additionalData forAppId:@\"<APP_ID>\" error:&error];","    if (error != nil) {","        NSLog(@\"Error: %@\", error);","    }","}"],"syntax":"objc","type":"codeListing"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://com.perimeterx.mobile-sdk/documentation/HUMAN":{"kind":"symbol","role":"collection","title":"HUMAN","url":"\/documentation\/human","abstract":[{"type":"image","identifier":"HUMAN_logo.png"}],"type":"topic","identifier":"doc:\/\/com.perimeterx.mobile-sdk\/documentation\/HUMAN"},"doc://com.perimeterx.mobile-sdk/documentation/HUMAN/HSPolicy":{"role":"symbol","navigatorTitle":[{"text":"HSPolicy","kind":"identifier"}],"abstract":[{"text":"The policy that define the behaviour of the SDK.","type":"text"}],"title":"HSPolicy","identifier":"doc:\/\/com.perimeterx.mobile-sdk\/documentation\/HUMAN\/HSPolicy","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"HSPolicy","kind":"identifier"}],"type":"topic","url":"\/documentation\/human\/hspolicy","kind":"symbol"},"#account-defender-integration":{"url":"#account-defender-integration","type":"link","titleInlineContent":[{"text":"Account Defender integration","type":"text"}],"title":"Account Defender integration","identifier":"#account-defender-integration"},"#how-to-start-the-sdk":{"url":"#how-to-start-the-sdk","type":"link","titleInlineContent":[{"type":"text","text":"How to start the SDK"}],"title":"How to start the SDK","identifier":"#how-to-start-the-sdk"},"doc://com.perimeterx.mobile-sdk/documentation/HUMAN/HSAutomaticInterceptorPolicy/urlSessionConfiguration":{"identifier":"doc:\/\/com.perimeterx.mobile-sdk\/documentation\/HUMAN\/HSAutomaticInterceptorPolicy\/urlSessionConfiguration","abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"URLSessionConfiguration"},{"type":"text","text":" that should be used by the SDK. Default is "},{"type":"codeVoice","code":"URLSessionConfiguration.default"},{"type":"text","text":"."}],"role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"urlSessionConfiguration","kind":"identifier"},{"text":": ","kind":"text"},{"text":"URLSessionConfiguration","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSURLSessionConfiguration"}],"url":"\/documentation\/human\/hsautomaticinterceptorpolicy\/urlsessionconfiguration","kind":"symbol","navigatorTitle":[{"text":"urlSessionConfiguration","kind":"identifier"}],"type":"topic","title":"urlSessionConfiguration"},"#bot-defender-integration":{"url":"#bot-defender-integration","type":"link","titleInlineContent":[{"text":"Bot Defender integration","type":"text"}],"title":"Bot Defender integration","identifier":"#bot-defender-integration"},"doc://com.perimeterx.mobile-sdk/documentation/HUMAN/HSBotDefender/setCustomParameters(parameters:forAppId:)":{"identifier":"doc:\/\/com.perimeterx.mobile-sdk\/documentation\/HUMAN\/HSBotDefender\/setCustomParameters(parameters:forAppId:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"setCustomParameters"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"parameters"},{"kind":"text","text":": ["},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"forAppId"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":"?) ","kind":"text"},{"text":"throws","kind":"keyword"}],"kind":"symbol","role":"symbol","navigatorTitle":[{"text":"setCustomParametersWithParameters:forAppId:error:","kind":"identifier"}],"abstract":[{"type":"text","text":"Set custom parameters for given AppID."}],"title":"setCustomParameters(parameters:forAppId:)","url":"\/documentation\/human\/hsbotdefender\/setcustomparameters(parameters:forappid:)","type":"topic"},"https://square.github.io/okhttp/":{"url":"https:\/\/square.github.io\/okhttp\/","type":"link","titleInlineContent":[{"type":"text","text":"OkHttp"}],"title":"OkHttp","identifier":"https:\/\/square.github.io\/okhttp\/"},"https://github.com/Alamofire/Alamofire":{"url":"https:\/\/github.com\/Alamofire\/Alamofire","type":"link","titleInlineContent":[{"code":"Alamofire","type":"codeVoice"}],"title":"Alamofire","identifier":"https:\/\/github.com\/Alamofire\/Alamofire"},"doc://com.perimeterx.mobile-sdk/documentation/HUMAN/HSAutomaticInterceptorPolicy/interceptorType":{"kind":"symbol","abstract":[],"title":"interceptorType","role":"symbol","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"interceptorType"},{"text":": ","kind":"text"},{"preciseIdentifier":"c:@M@HUMAN@E@HSAutomaticInterceptorType","text":"HSAutomaticInterceptorType","kind":"typeIdentifier"}],"url":"\/documentation\/human\/hsautomaticinterceptorpolicy\/interceptortype","identifier":"doc:\/\/com.perimeterx.mobile-sdk\/documentation\/HUMAN\/HSAutomaticInterceptorPolicy\/interceptorType","navigatorTitle":[{"text":"interceptorType","kind":"identifier"}]},"doc://com.perimeterx.mobile-sdk/documentation/HUMAN/HumanSecurity/start(appIds:policy:)":{"navigatorTitle":[{"kind":"identifier","text":"startWithAppIds:policy:error:"}],"abstract":[{"type":"text","text":"Start the SDK."}],"kind":"symbol","title":"start(appIds:policy:)","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"start","kind":"identifier"},{"kind":"text","text":"("},{"text":"appIds","kind":"externalParam"},{"text":": [","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":"], ","kind":"text"},{"text":"policy","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"c:@M@HUMAN@objc(cs)HSPolicy","text":"HSPolicy"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"}],"type":"topic","role":"symbol","url":"\/documentation\/human\/humansecurity\/start(appids:policy:)","identifier":"doc:\/\/com.perimeterx.mobile-sdk\/documentation\/HUMAN\/HumanSecurity\/start(appIds:policy:)"},"doc://com.perimeterx.mobile-sdk/documentation/HUMAN/HSAccountDefender/setAdditionalData(parameters:forAppId:)":{"abstract":[{"text":"Set additional data that support Account Defender for given AppID.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.perimeterx.mobile-sdk\/documentation\/HUMAN\/HSAccountDefender\/setAdditionalData(parameters:forAppId:)","role":"symbol","url":"\/documentation\/human\/hsaccountdefender\/setadditionaldata(parameters:forappid:)","title":"setAdditionalData(parameters:forAppId:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"setAdditionalData","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"parameters"},{"text":": [","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":"], ","kind":"text"},{"text":"forAppId","kind":"externalParam"},{"kind":"text","text":": "},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":"?) "},{"kind":"keyword","text":"throws"}],"navigatorTitle":[{"text":"setAdditionalDataWithParameters:forAppId:error:","kind":"identifier"}]},"doc://com.perimeterx.mobile-sdk/documentation/HUMAN/HSAutomaticInterceptorType/intercept":{"role":"symbol","identifier":"doc:\/\/com.perimeterx.mobile-sdk\/documentation\/HUMAN\/HSAutomaticInterceptorType\/intercept","url":"\/documentation\/human\/hsautomaticinterceptortype\/intercept","type":"topic","fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"kind":"identifier","text":"intercept"}],"navigatorTitle":[{"text":"HSAutomaticInterceptorTypeIntercept","kind":"identifier"}],"kind":"symbol","title":"HSAutomaticInterceptorType.intercept","abstract":[{"type":"text","text":"The SDK intercepts URL requests in order to add HTTP headers and handle block responses."},{"type":"text","text":" "},{"type":"text","text":"The SDK can intercept those types of requests:"}]},"https://square.github.io/okhttp/features/interceptors/":{"url":"https:\/\/square.github.io\/okhttp\/features\/interceptors\/","type":"link","titleInlineContent":[{"type":"text","text":"Interceptors"}],"title":"Interceptors","identifier":"https:\/\/square.github.io\/okhttp\/features\/interceptors\/"},"https://developer.apple.com/documentation/foundation/urlsession":{"url":"https:\/\/developer.apple.com\/documentation\/foundation\/urlsession","type":"link","titleInlineContent":[{"code":"URLSession","type":"codeVoice"}],"title":"URLSession","identifier":"https:\/\/developer.apple.com\/documentation\/foundation\/urlsession"},"doc://com.perimeterx.mobile-sdk/documentation/HUMAN/HumanSecurity/start(appId:policy:)":{"title":"start(appId:policy:)","abstract":[{"text":"Start the SDK.","type":"text"}],"type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"startWithAppId:policy:error:"}],"role":"symbol","url":"\/documentation\/human\/humansecurity\/start(appid:policy:)","identifier":"doc:\/\/com.perimeterx.mobile-sdk\/documentation\/HUMAN\/HumanSecurity\/start(appId:policy:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"start","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"appId"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"policy","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"c:@M@HUMAN@objc(cs)HSPolicy","text":"HSPolicy","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}]}},"variantOverrides":[{"patch":[{"op":"replace","value":"occ","path":"\/identifier\/interfaceLanguage"},{"value":null,"op":"add","path":"\/topicSections"},{"op":"add","value":null,"path":"\/seeAlsoSections"},{"value":"HSPolicy","op":"replace","path":"\/references\/doc:~1~1com.perimeterx.mobile-sdk~1documentation~1HUMAN~1HSPolicy\/title"},{"op":"replace","value":[{"kind":"identifier","text":"HSPolicy"}],"path":"\/references\/doc:~1~1com.perimeterx.mobile-sdk~1documentation~1HUMAN~1HSPolicy\/fragments"},{"path":"\/references\/doc:~1~1com.perimeterx.mobile-sdk~1documentation~1HUMAN~1HSPolicy\/navigatorTitle","value":[{"text":"HSPolicy","kind":"identifier"}],"op":"replace"},{"value":"urlSessionConfiguration","op":"replace","path":"\/references\/doc:~1~1com.perimeterx.mobile-sdk~1documentation~1HUMAN~1HSAutomaticInterceptorPolicy~1urlSessionConfiguration\/title"},{"value":[{"text":"urlSessionConfiguration","kind":"identifier"}],"op":"replace","path":"\/references\/doc:~1~1com.perimeterx.mobile-sdk~1documentation~1HUMAN~1HSAutomaticInterceptorPolicy~1urlSessionConfiguration\/fragments"},{"value":"setCustomParametersWithParameters:forAppId:error:","op":"replace","path":"\/references\/doc:~1~1com.perimeterx.mobile-sdk~1documentation~1HUMAN~1HSBotDefender~1setCustomParameters(parameters:forAppId:)\/title"},{"op":"replace","path":"\/references\/doc:~1~1com.perimeterx.mobile-sdk~1documentation~1HUMAN~1HSBotDefender~1setCustomParameters(parameters:forAppId:)\/fragments","value":[{"kind":"text","text":"- "},{"text":"setCustomParametersWithParameters:forAppId:error:","kind":"identifier"}]},{"value":"interceptorType","op":"replace","path":"\/references\/doc:~1~1com.perimeterx.mobile-sdk~1documentation~1HUMAN~1HSAutomaticInterceptorPolicy~1interceptorType\/title"},{"path":"\/references\/doc:~1~1com.perimeterx.mobile-sdk~1documentation~1HUMAN~1HSAutomaticInterceptorPolicy~1interceptorType\/fragments","op":"replace","value":[{"kind":"identifier","text":"interceptorType"}]},{"value":"startWithAppIds:policy:error:","path":"\/references\/doc:~1~1com.perimeterx.mobile-sdk~1documentation~1HUMAN~1HumanSecurity~1start(appIds:policy:)\/title","op":"replace"},{"op":"replace","value":[{"kind":"text","text":"+ "},{"text":"startWithAppIds:policy:error:","kind":"identifier"}],"path":"\/references\/doc:~1~1com.perimeterx.mobile-sdk~1documentation~1HUMAN~1HumanSecurity~1start(appIds:policy:)\/fragments"},{"path":"\/references\/doc:~1~1com.perimeterx.mobile-sdk~1documentation~1HUMAN~1HSAccountDefender~1setAdditionalData(parameters:forAppId:)\/title","value":"setAdditionalDataWithParameters:forAppId:error:","op":"replace"},{"path":"\/references\/doc:~1~1com.perimeterx.mobile-sdk~1documentation~1HUMAN~1HSAccountDefender~1setAdditionalData(parameters:forAppId:)\/fragments","value":[{"text":"- ","kind":"text"},{"text":"setAdditionalDataWithParameters:forAppId:error:","kind":"identifier"}],"op":"replace"},{"op":"replace","value":"HSAutomaticInterceptorTypeIntercept","path":"\/references\/doc:~1~1com.perimeterx.mobile-sdk~1documentation~1HUMAN~1HSAutomaticInterceptorType~1intercept\/title"},{"op":"replace","path":"\/references\/doc:~1~1com.perimeterx.mobile-sdk~1documentation~1HUMAN~1HSAutomaticInterceptorType~1intercept\/fragments","value":[{"text":"HSAutomaticInterceptorTypeIntercept","kind":"identifier"}]},{"value":"startWithAppId:policy:error:","path":"\/references\/doc:~1~1com.perimeterx.mobile-sdk~1documentation~1HUMAN~1HumanSecurity~1start(appId:policy:)\/title","op":"replace"},{"value":[{"kind":"text","text":"+ "},{"kind":"identifier","text":"startWithAppId:policy:error:"}],"op":"replace","path":"\/references\/doc:~1~1com.perimeterx.mobile-sdk~1documentation~1HUMAN~1HumanSecurity~1start(appId:policy:)\/fragments"}],"traits":[{"interfaceLanguage":"occ"}]}]}