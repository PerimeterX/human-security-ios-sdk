{"sections":[],"metadata":{"role":"article","roleHeading":"Article","modules":[{"name":"HUMAN"}],"title":"Hybrid App Integration"},"primaryContentSections":[{"kind":"content","content":[{"text":"What is an Hybrid App","type":"heading","level":2,"anchor":"What-is-an-Hybrid-App"},{"inlineContent":[{"type":"text","text":"An Hybrid App uses both native URL requests and web views to communicate with your server. In the context of  HUMAN, it’s important to make sure both native requests and web views are synced together to make sure end users will get the expected behavior from your app."}],"type":"paragraph"},{"text":"How do I know if my app is an Hybrid App","type":"heading","level":2,"anchor":"How-do-I-know-if-my-app-is-an-Hybrid-App"},{"inlineContent":[{"type":"text","text":"Your app is considered to be an Hybrid App if it has "},{"type":"strong","inlineContent":[{"text":"ALL","type":"text"}]},{"type":"text","text":" of the following:"}],"type":"paragraph"},{"type":"orderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"A web view component (","type":"text"},{"type":"codeVoice","code":"WKWebView"},{"text":" on iOS or ","type":"text"},{"type":"codeVoice","code":"WebView"},{"text":" on Android) that loads ","type":"text"},{"inlineContent":[{"type":"text","text":"your website"}],"type":"strong"},{"text":".","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Your website"}]},{"text":" is protected by HUMAN (Bot Defender or Account Defender).","type":"text"}]}]}]},{"inlineContent":[{"type":"text","text":"On iOS, if your app uses "},{"isActive":true,"type":"reference","identifier":"https:\/\/developer.apple.com\/documentation\/safariservices\/sfsafariviewcontroller"},{"type":"text","text":", please let us know and we will guide you for a specific integration."}],"type":"paragraph"},{"text":"How to enable an Hybrid App support in my app","type":"heading","level":2,"anchor":"How-to-enable-an-Hybrid-App-support-in-my-app"},{"text":"Integrate the SDK (native)","type":"heading","level":3,"anchor":"Integrate-the-SDK-native"},{"inlineContent":[{"type":"text","text":"You should integrate the SDK to your native app. You may choose one of the following ways:"}],"type":"paragraph"},{"type":"orderedList","items":[{"content":[{"inlineContent":[{"overridingTitle":"Easiest Implementation","type":"reference","identifier":"doc:\/\/com.perimeterx.mobile-sdk\/documentation\/HUMAN\/Native_Easiest_Implementation","isActive":true,"overridingTitleInlineContent":[{"type":"text","text":"Easiest Implementation"}]}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"reference","identifier":"doc:\/\/com.perimeterx.mobile-sdk\/documentation\/HUMAN\/Native_Basic_Implementation","isActive":true,"overridingTitle":"Basic Implementation","overridingTitleInlineContent":[{"text":"Basic Implementation","type":"text"}]}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"identifier":"doc:\/\/com.perimeterx.mobile-sdk\/documentation\/HUMAN\/Native_Advanced_Functionality","isActive":true,"overridingTitle":"Advanced Functionality","overridingTitleInlineContent":[{"text":"Advanced Functionality","type":"text"}],"type":"reference"}]}]}]},{"text":"Enable Hybrid App support","type":"heading","level":3,"anchor":"Enable-Hybrid-App-support"},{"inlineContent":[{"type":"text","text":"When starting the SDK you should declare your website root domain in the policy. This should be the domain which the SDK will set cookies."}],"type":"paragraph"},{"inlineContent":[{"text":"The SDK enables Hybrid App support ONLY for those domains. The SDK checks if the website’s domain ends with one of the domains that were set. For example: If you set ","type":"text"},{"code":"example.com","type":"codeVoice"},{"text":", the SDK will also support ","type":"text"},{"code":"www.example.com","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"api.example.com","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"You should send the "},{"type":"codeVoice","code":"WebView"},{"type":"text","text":" instance to the SDK via the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.perimeterx.mobile-sdk\/documentation\/HUMAN\/HumanSecurity\/setupWebView(webView:navigationDelegate:)"},{"type":"text","text":" function in iOS and "},{"type":"codeVoice","code":"HumanSecurity\/setupWebView(webView:webViewClient:)"},{"type":"text","text":" function in Android. This function sets the "},{"type":"codeVoice","code":"WebView"},{"type":"text","text":"‘s "},{"type":"codeVoice","code":"navigationDelegate"},{"type":"text","text":" (iOS) and "},{"type":"codeVoice","code":"webViewClient"},{"type":"text","text":" (Android) with the SDK’s object. "},{"type":"strong","inlineContent":[{"type":"text","text":"You should not set those properties after calling the "},{"type":"codeVoice","code":"setupWebView"},{"type":"text","text":" function"}]},{"type":"text","text":"."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"On iOS, you can ask the SDK to detect "},{"type":"codeVoice","code":"WKWebView"},{"type":"text","text":"s and setup them automatically without calling the "},{"type":"reference","identifier":"doc:\/\/com.perimeterx.mobile-sdk\/documentation\/HUMAN\/HumanSecurity\/setupWebView(webView:navigationDelegate:)","isActive":true},{"type":"text","text":" function for each instance. You can enable this feature by setting the "},{"type":"reference","identifier":"doc:\/\/com.perimeterx.mobile-sdk\/documentation\/HUMAN\/HSHybridAppPolicy\/automaticSetup","isActive":true},{"type":"text","text":" to be "},{"type":"codeVoice","code":"true"},{"type":"text","text":"."}],"type":"paragraph"},{"inlineContent":[{"text":"Here is an example of how it should be:","type":"text"}],"type":"paragraph"},{"text":"Android","type":"heading","level":4,"anchor":"Android"},{"inlineContent":[{"type":"text","text":"Kotlin:"}],"type":"paragraph"},{"code":["import android.app.Application","import com.humansecurity.mobile_sdk.HumanSecurity","import com.humansecurity.mobile_sdk.main.policy.HSPolicy","","class MainApplication: Application() {","","    override fun onCreate() {","        super.onCreate()","        startHumanSDK()","    }","","    private fun startHumanSDK() {","        try {","            val policy = HSPolicy()","            \/\/ Configure the policy...","","            val webRootDomains = setOf(\".example.com\")","            policy.hybridAppPolicy.setWebRootDomains(webRootDomains, \"<APP_ID>\")","","            HumanSecurity.start(this, \"<APP_ID>\", policy)","        }","        catch (exception: Exception) {","            println(\"Exception: ${exception.message}\")","        }","    }","}"],"type":"codeListing","syntax":"kotlin"},{"code":["import androidx.appcompat.app.AppCompatActivity","import android.os.Bundle","import android.webkit.WebView","import com.humansecurity.mobile_sdk.HumanSecurity","","class MainActivity: AppCompatActivity() {","","    override fun onCreate(savedInstanceState: Bundle?) {","        super.onCreate(savedInstanceState)","        setContentView(R.layout.activity_main)","","        val webView = findViewById<WebView>(R.id.web_view)","        val webViewClient = MyWebViewClient()","        HumanSecurity.setupWebView(webView, webViewClient)","","        \/\/ Load your website in the web view...","    }","}"],"type":"codeListing","syntax":"kotlin"},{"inlineContent":[{"type":"text","text":"Java:"}],"type":"paragraph"},{"code":["import android.app.Application;","import android.util.Log;","import java.util.HashSet;","import com.humansecurity.mobile_sdk.HumanSecurity;","import com.humansecurity.mobile_sdk.main.policy.HSPolicy;","","public class MainApplication extends Application {","","    @Override","    public void onCreate() {","        super.onCreate();","        startHumanSDK();","    }","","    void startHumanSDK() {","        try {","            HSPolicy policy = new HSPolicy();","            \/\/ Configure the policy...","","            HashSet<String> domains = new HashSet<>();","            domains.add(\".example.com\");","            policy.getHybridAppPolicy().setWebRootDomains(domains, \"<APP_ID>\");","","            HumanSecurity.INSTANCE.start(this, \"<APP_ID>\", policy);","        }","        catch (Exception exception) {","            Log.e(\"MainApplication\",\"Exception: \" + exception.getMessage());","        }","    }","}"],"type":"codeListing","syntax":"java"},{"code":["import androidx.appcompat.app.AppCompatActivity;","import android.os.Bundle;","import android.webkit.WebView;","import android.webkit.WebViewClient;","import com.humansecurity.mobile_sdk.HumanSecurity;","","public class MainActivity extends AppCompatActivity {","","    @Override","    protected void onCreate(Bundle savedInstanceState) {","        super.onCreate(savedInstanceState);","        setContentView(R.layout.activity_main);","","        WebView webView = findViewById(R.id.web_view);","        MyWebViewClient webViewClient = new MyWebViewClient();","        HumanSecurity.INSTANCE.setupWebView(webView, webViewClient);","","        \/\/ Load your website in the web view...","    }","}"],"type":"codeListing","syntax":"java"},{"text":"iOS","type":"heading","level":4,"anchor":"iOS"},{"inlineContent":[{"type":"text","text":"Swift:"}],"type":"paragraph"},{"code":["import UIKit","import HUMAN","","class AppDelegate: UIResponder, UIApplicationDelegate {","","    func application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]?) -> Bool {","        startHumanSDK()","        return true","    }","","    func startHumanSDK() {","        do {","            let policy = HSPolicy()","            \/\/ Configure the policy...","","            policy.hybridAppPolicy.set(webRootDomains: [\".example.com\"], forAppId: \"<APP_ID>\")","            ","            try HumanSecurity.start(appId: \"<APP_ID>\", policy: policy)","        }","        catch {","            print(\"Error: \\(error)\")","        }","    }","}"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"type":"text","text":"Objective-C:"}],"type":"paragraph"},{"code":["@import HUMAN;","","@implementation AppDelegate","","- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions {","    [self startHumanSDK];","    return YES;","}","","- (void)startHumanSDK {","    HSPolicy *policy = [[HSPolicy alloc] init];","    \/\/ Configure the policy...","","    [policy.hybridAppPolicy setWithWebRootDomains:[NSSet setWithObject:@\".example.com\"] forAppId:@\"<APP_ID>\"];","","    NSError *error = nil;","    [HumanSecurity startWithAppId:@\"<APP_ID>\" policy:policy error:&error];","    if (error != nil) {","        NSLog(@\"Error: %@\", error);","    }","}"],"type":"codeListing","syntax":"objc"},{"inlineContent":[{"text":"Let’s talk about what we have in the code here:","type":"text"}],"type":"paragraph"},{"type":"orderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"We add our website’s domain to the policy’s web root domain list.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"We start the SDK.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"[Android only] We call the "},{"type":"codeVoice","code":"HumanSecurity\/setupWebView(webView:webViewClient:)"},{"type":"text","text":" function with the following parameters:"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"webView"},{"type":"text","text":" - the web view we want to setup."}]}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"webViewClient"},{"type":"text","text":" (optional) - the web view client that we want to set in the web view."}],"type":"paragraph"}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The SDK creates it own web view client and set it in web view. The SDK will pass all events to your web view client. "},{"type":"strong","inlineContent":[{"type":"text","text":"DO NOT set the web view client directly"}]},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The SDK enables JavaScript by setting "},{"type":"codeVoice","code":"webView.settings.javaScriptEnabled"},{"type":"text","text":" to "},{"type":"codeVoice","code":"true"},{"type":"text","text":". "},{"type":"strong","inlineContent":[{"type":"text","text":"DO NOT change this setting"}]},{"type":"text","text":"."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"[iOS only] We call the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.perimeterx.mobile-sdk\/documentation\/HUMAN\/HumanSecurity\/setupWebView(webView:navigationDelegate:)"},{"type":"text","text":" function with the following parameters:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"webView"},{"type":"text","text":" - the web view we want to setup."}]}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"navigationDelegate"},{"type":"text","text":" (optional) - the navigation delegate that we want to set in the web view."}],"type":"paragraph"}]}]},{"type":"paragraph","inlineContent":[{"text":"The SDK creates its own web navigation delegate and set it in web view. The SDK will pass all events to your navigation delegate. ","type":"text"},{"inlineContent":[{"text":"DO NOT set the navigation delegate directly","type":"text"}],"type":"strong"},{"text":".","type":"text"}]}]}]},{"text":"Apple Pay on the Web","type":"heading","level":3,"anchor":"Apple-Pay-on-the-Web"},{"inlineContent":[{"type":"text","text":"If your website uses "},{"isActive":true,"identifier":"https:\/\/developer.apple.com\/documentation\/apple_pay_on_the_web","type":"reference"},{"type":"text","text":" you should disable JavaScript evaluation by the SDK. In order to protect the security of Apple Pay transactions in "},{"type":"codeVoice","code":"WKWebView"},{"type":"text","text":", Apple Pay cannot be used alongside of script injection APIs (relevant for iOS 13-15). You can do this by setting the SDK’s policy. However, if your app is targeting "},{"type":"strong","inlineContent":[{"text":"only","type":"text"}]},{"type":"text","text":" iOS 16 or above, you don’t have to disable JavaScript evaluation by the SDK."}],"type":"paragraph"},{"inlineContent":[{"text":"Here is an example of how it should be:","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"Swift:","type":"text"}],"type":"paragraph"},{"code":["policy.hybridAppPolicy.allowJavaScriptEvaluation = false"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"text":"Objective-C:","type":"text"}],"type":"paragraph"},{"code":["policy.hybridAppPolicy.allowJavaScriptEvaluation = NO;"],"type":"codeListing","syntax":"objc"},{"text":"External web views","type":"heading","level":3,"anchor":"External-web-views"},{"inlineContent":[{"type":"text","text":"If your app uses web views that created outside the native side of the app but are still based on Apple’s "},{"type":"codeVoice","code":"WKWebView"},{"type":"text","text":" or Android’s "},{"type":"codeVoice","code":"WebView"},{"type":"text","text":" (for example, "},{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/react-native-webview\/react-native-webview"},{"type":"text","text":"), then you should enable support for them in the SDK’s policy:"}],"type":"paragraph"},{"text":"Android","type":"heading","level":4,"anchor":"Android"},{"inlineContent":[{"type":"text","text":"Kotlin:"}],"type":"paragraph"},{"code":["policy.hybridAppPolicy.supportExternalWebViews = true"],"type":"codeListing","syntax":"kotlin"},{"inlineContent":[{"type":"text","text":"Java:"}],"type":"paragraph"},{"code":["policy.getHybridAppPolicy().setSupportExternalWebViews(true);"],"type":"codeListing","syntax":"java"},{"text":"iOS","type":"heading","level":4,"anchor":"iOS"},{"inlineContent":[{"type":"text","text":"Swift:"}],"type":"paragraph"},{"code":["policy.hybridAppPolicy.supportExternalWebViews = true"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"text":"Objective-C:","type":"text"}],"type":"paragraph"},{"code":["policy.hybridAppPolicy.supportExternalWebViews = YES;"],"type":"codeListing","syntax":"objc"}]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/com.perimeterx.mobile-sdk\/documentation\/HUMAN"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.perimeterx.mobile-sdk\/documentation\/HUMAN\/Hybrid_App_Integration"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/human\/hybrid_app_integration"]},{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/human\/hybrid_app_integration"]}],"kind":"article","references":{"doc://com.perimeterx.mobile-sdk/documentation/HUMAN":{"abstract":[{"type":"image","identifier":"HUMAN_logo.png"}],"type":"topic","title":"HUMAN","role":"collection","url":"\/documentation\/human","kind":"symbol","identifier":"doc:\/\/com.perimeterx.mobile-sdk\/documentation\/HUMAN"},"doc://com.perimeterx.mobile-sdk/documentation/HUMAN/Native_Easiest_Implementation":{"abstract":[],"url":"\/documentation\/human\/native_easiest_implementation","kind":"article","type":"topic","identifier":"doc:\/\/com.perimeterx.mobile-sdk\/documentation\/HUMAN\/Native_Easiest_Implementation","title":"Native - Easiest Implementation","role":"article"},"doc://com.perimeterx.mobile-sdk/documentation/HUMAN/HumanSecurity/setupWebView(webView:navigationDelegate:)":{"title":"setupWebView(webView:navigationDelegate:)","navigatorTitle":[{"kind":"identifier","text":"setupWebViewWithWebView:navigationDelegate:"}],"abstract":[{"text":"Setup the web view to be synced with SDK. Do not set a ","type":"text"},{"code":"WKNavigationDelegate","type":"codeVoice"},{"text":" to the web view after calling this function.","type":"text"},{"text":" ","type":"text"},{"text":"If you wish to set a web view client, call this function again with the new ","type":"text"},{"code":"WKNavigationDelegate","type":"codeVoice"},{"text":". You should not call this method when the ","type":"text"},{"identifier":"doc:\/\/com.perimeterx.mobile-sdk\/documentation\/HUMAN\/HSHybridAppPolicy\/automaticSetup","isActive":true,"type":"reference"},{"text":" is set to ","type":"text"},{"code":"true","type":"codeVoice"},{"text":".","type":"text"}],"url":"\/documentation\/human\/humansecurity\/setupwebview(webview:navigationdelegate:)","type":"topic","kind":"symbol","identifier":"doc:\/\/com.perimeterx.mobile-sdk\/documentation\/HUMAN\/HumanSecurity\/setupWebView(webView:navigationDelegate:)","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"setupWebView","kind":"identifier"},{"text":"(","kind":"text"},{"text":"webView","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"WKWebView","preciseIdentifier":"c:objc(cs)WKWebView","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"navigationDelegate","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"WKNavigationDelegate","preciseIdentifier":"c:objc(pl)WKNavigationDelegate","kind":"typeIdentifier"},{"text":"?)","kind":"text"}]},"doc://com.perimeterx.mobile-sdk/documentation/HUMAN/Native_Basic_Implementation":{"abstract":[],"url":"\/documentation\/human\/native_basic_implementation","kind":"article","type":"topic","identifier":"doc:\/\/com.perimeterx.mobile-sdk\/documentation\/HUMAN\/Native_Basic_Implementation","title":"Native - Basic Implementation","role":"article"},"https://github.com/react-native-webview/react-native-webview":{"titleInlineContent":[{"type":"text","text":"react-native-webview"}],"url":"https:\/\/github.com\/react-native-webview\/react-native-webview","title":"react-native-webview","type":"link","identifier":"https:\/\/github.com\/react-native-webview\/react-native-webview"},"https://developer.apple.com/documentation/safariservices/sfsafariviewcontroller":{"url":"https:\/\/developer.apple.com\/documentation\/safariservices\/sfsafariviewcontroller","type":"link","identifier":"https:\/\/developer.apple.com\/documentation\/safariservices\/sfsafariviewcontroller","title":"SFSafariViewController","titleInlineContent":[{"code":"SFSafariViewController","type":"codeVoice"}]},"https://developer.apple.com/documentation/apple_pay_on_the_web":{"titleInlineContent":[{"type":"text","text":"Apple Pay on the Web"}],"url":"https:\/\/developer.apple.com\/documentation\/apple_pay_on_the_web","title":"Apple Pay on the Web","type":"link","identifier":"https:\/\/developer.apple.com\/documentation\/apple_pay_on_the_web"},"doc://com.perimeterx.mobile-sdk/documentation/HUMAN/Native_Advanced_Functionality":{"abstract":[],"url":"\/documentation\/human\/native_advanced_functionality","kind":"article","type":"topic","identifier":"doc:\/\/com.perimeterx.mobile-sdk\/documentation\/HUMAN\/Native_Advanced_Functionality","title":"Native - Advanced Functionality","role":"article"},"doc://com.perimeterx.mobile-sdk/documentation/HUMAN/HSHybridAppPolicy/automaticSetup":{"identifier":"doc:\/\/com.perimeterx.mobile-sdk\/documentation\/HUMAN\/HSHybridAppPolicy\/automaticSetup","role":"symbol","abstract":[{"type":"text","text":"When this property is "},{"type":"codeVoice","code":"true"},{"type":"text","text":", the SDK detects all "},{"type":"codeVoice","code":"WKWebView"},{"type":"text","text":" instances and sets them up for Hybrid App support automatically. As a result, you don’t need to call the "},{"type":"reference","identifier":"doc:\/\/com.perimeterx.mobile-sdk\/documentation\/HUMAN\/HumanSecurity\/setupWebView(webView:navigationDelegate:)","isActive":true},{"type":"text","text":" function. Default is "},{"type":"codeVoice","code":"false"},{"type":"text","text":"."}],"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"automaticSetup"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"kind":"symbol","url":"\/documentation\/human\/hshybridapppolicy\/automaticsetup","title":"automaticSetup","navigatorTitle":[{"kind":"identifier","text":"automaticSetup"}],"type":"topic"}},"variantOverrides":[{"traits":[{"interfaceLanguage":"occ"}],"patch":[{"op":"replace","value":"occ","path":"\/identifier\/interfaceLanguage"},{"op":"add","value":null,"path":"\/topicSections"},{"op":"add","value":null,"path":"\/seeAlsoSections"},{"op":"replace","value":"setupWebViewWithWebView:navigationDelegate:","path":"\/references\/doc:~1~1com.perimeterx.mobile-sdk~1documentation~1HUMAN~1HumanSecurity~1setupWebView(webView:navigationDelegate:)\/title"},{"op":"replace","value":[{"text":"+ ","kind":"text"},{"text":"setupWebViewWithWebView:navigationDelegate:","kind":"identifier"}],"path":"\/references\/doc:~1~1com.perimeterx.mobile-sdk~1documentation~1HUMAN~1HumanSecurity~1setupWebView(webView:navigationDelegate:)\/fragments"},{"op":"replace","value":"automaticSetup","path":"\/references\/doc:~1~1com.perimeterx.mobile-sdk~1documentation~1HUMAN~1HSHybridAppPolicy~1automaticSetup\/title"},{"op":"replace","value":[{"text":"automaticSetup","kind":"identifier"}],"path":"\/references\/doc:~1~1com.perimeterx.mobile-sdk~1documentation~1HUMAN~1HSHybridAppPolicy~1automaticSetup\/fragments"}]}]}